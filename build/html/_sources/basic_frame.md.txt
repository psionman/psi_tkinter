# Basic structure

## GUI class

```python
# gui.py

import tkinter as tk

from constants import GEOMETRY, APP_TITLE, ICON_FILE

from frm_main import MainFrame


class GUI():
    def __init__(self) -> None:
        self.root = tk.Tk()
        ...

    def show(self):
        """Create the app's root and loop."""
        root = self.root
        root.option_add('*tearOff', False)
        root.geometry(GEOMETRY)
        root.iconphoto(False, tk.PhotoImage(file=ICON_FILE))
        root.title(f'{APP_TITLE}')
        root.protocol("WM_DELETE_WINDOW", root.destroy)

        main_menu = MainMenu(self, root)
        main_menu.create()
        MainFrame(self)

        root.mainloop()

        ...
```

## Main Frame class

```python
# main_frame.py

import tkinter as tk
from tkinter import ttk
from constants import MAIN_FRAME_TITLE

class MainFrame():
    def __init__(self, parent):
        self.parent = parent
        self.root = self.parent.root

        self.entry = None
        self.show_password = tk.StringVar(value='hide')
        self.show_hide = tk.StringVar(value='hide')

        self.root.rowconfigure(0, weight=1)
        self.root.rowconfigure(1, weight=10)
        self.root.rowconfigure(3, weight=1)
        self.root.columnconfigure(0, weight=1)
        self.create_frames()

    def create_frames(self):
        self._header_frame(row=0)
        self._main_frame(row=1)
        self._button_frame(row=2)

        sizegrip = ttk.Sizegrip(self.root)
        sizegrip.grid(row=4, column=1, sticky=tk.SE)

    def _header_frame(self, row=0, col=0):
        frame = ttk.Frame(self.root)
        frame.grid(row=row, column=col)
        frame.rowconfigure(0, weight=1)
        header = ttk.Label(frame, text=MAIN_FRAME_TITLE, font=("Arial", 16))
        header.grid(row=0, column=0, columnspan=99)

    def _main_frame(self, row=0, col=0):
        frame = ttk.Frame(self.root)
        frame.grid(row=row, column=col, sticky=tk.EW)
        frame.rowconfigure(0, weight=1)
        frame.columnconfigure(0, weight=1)
        frame.columnconfigure(1, weight=10)
        frame.columnconfigure(2, weight=1)

        label = ttk.Label(frame, text="Label")
        label.grid(row=0, column=0, sticky=tk.E, padx=5)

        self.entry = ttk.Entry(
            frame,
            # textvariable=self.parent.entry_text,
            )
        self.entry.grid(row=0, column=1, sticky=tk.EW)
        self.entry.focus_set()

    def _button_frame(self, row=0, col=0) -> None:
        """Create button row."""
        frame = ttk.Frame(self.root)
        frame.grid(row=row, column=col, sticky=tk.EW, padx=5, pady=5)
        frame.columnconfigure(0, weight=1)
        frame.columnconfigure(1, weight=10)
        frame.columnconfigure(2, weight=1)

        self.process_button = ttk.Button(
            frame,
            text='Process',
            # command=self.parent.process_click,
            state='disabled')
        self.process_button.grid(row=0, column=0, sticky=tk.W)

        padding = ttk.Label(frame, text='')
        padding.grid(row=0, column=1)

        quit_button = ttk.Button(frame, text='Quit', command=self.quit)
        quit_button.grid(row=0, column=2, sticky=tk.E)

    def quit(self):
        # ic(self.root.winfo_width())
        # ic(self.root.winfo_height())
        self.root.destroy()
```

## Modal Frame

```python
from pathlib import Path
import tkinter as tk
from tkinter import ttk, filedialog

class ConfigFrame(tk.Toplevel):
    def __init__(self, parent):
        super().__init__(parent.root)
        self.iconphoto(False, tk.PhotoImage(file=ICON_FILE))

        self.parent = parent
        self.root = self.parent.root

        self.rowconfigure(0, weight=1)
        self.rowconfigure(1, weight=10)
        self.rowconfigure(3, weight=1)
        self.columnconfigure(0, weight=1)

        self.create_frames()

        sizegrip = ttk.Sizegrip(self)
        sizegrip.grid(sticky=tk.SE)

    def create_frames(self):
        self._header_frame(row=0)
        self._main_frame(row=1)
        self._button_frame(row=2)
    ...

    def _header_frame(self, row=0, col=0):
        frame = ttk.Frame(self)
        frame.grid(row=row, column=col)
        frame.rowconfigure(0, weight=1)

        header = ttk.Label(frame, text=CONFIG_FRAME_TITLE, font=("Arial", 16))
        header.grid(row=0, column=0)

    def _main_frame(self, row=0, col=0):
        frame = ttk.Frame(self)
        frame.grid(row=row, column=col, sticky=tk.EW, padx=PAD, pady=PAD)
        frame.rowconfigure(0, weight=0)
        frame.columnconfigure(0, weight=1)
        frame.columnconfigure(1, weight=5)
        frame.columnconfigure(2, weight=10)
        frame.columnconfigure(3, weight=1)
        frame.columnconfigure(4, weight=1)

        self._file_widgets(frame, 1)
        self._create_main_sheet(frame, 2)
        self._create_directors_sheet(frame, 3)
        self._column_widgets(frame, 4)

    def _file_widgets(self, frame, row):
        """Email template."""
        label = ttk.Label(frame, text="Email template:")
        label.grid(row=row, column=0, sticky=tk.E)


```
